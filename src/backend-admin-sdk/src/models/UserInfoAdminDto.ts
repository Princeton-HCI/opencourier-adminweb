/* tslint:disable */
/* eslint-disable */
/**
 * OPENCOURIER-API
 * OpenCourier Backend API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserSessionAdminDto } from './UserSessionAdminDto';
import {
    UserSessionAdminDtoFromJSON,
    UserSessionAdminDtoFromJSONTyped,
    UserSessionAdminDtoToJSON,
} from './UserSessionAdminDto';

/**
 * 
 * @export
 * @interface UserInfoAdminDto
 */
export interface UserInfoAdminDto {
    /**
     * 
     * @type {string}
     * @memberof UserInfoAdminDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAdminDto
     */
    role: UserInfoAdminDtoRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof UserInfoAdminDto
     */
    email: string | null;
    /**
     * 
     * @type {UserSessionAdminDto}
     * @memberof UserInfoAdminDto
     */
    session?: UserSessionAdminDto;
}


/**
 * @export
 */
export const UserInfoAdminDtoRoleEnum = {
    Admin: 'ADMIN',
    Courier: 'COURIER',
    Partner: 'PARTNER'
} as const;
export type UserInfoAdminDtoRoleEnum = typeof UserInfoAdminDtoRoleEnum[keyof typeof UserInfoAdminDtoRoleEnum];


/**
 * Check if a given object implements the UserInfoAdminDto interface.
 */
export function instanceOfUserInfoAdminDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function UserInfoAdminDtoFromJSON(json: any): UserInfoAdminDto {
    return UserInfoAdminDtoFromJSONTyped(json, false);
}

export function UserInfoAdminDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfoAdminDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'role': json['role'],
        'email': json['email'],
        'session': !exists(json, 'session') ? undefined : UserSessionAdminDtoFromJSON(json['session']),
    };
}

export function UserInfoAdminDtoToJSON(value?: UserInfoAdminDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'role': value.role,
        'email': value.email,
        'session': UserSessionAdminDtoToJSON(value.session),
    };
}

