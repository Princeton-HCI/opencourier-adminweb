/* tslint:disable */
/* eslint-disable */
/**
 * OPENCOURIER-API
 * OpenCourier Backend API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InstanceConfigSettingsDto
 */
export interface InstanceConfigSettingsDto {
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    courierMatcherType: InstanceConfigSettingsDtoCourierMatcherTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    quoteCalculationType: InstanceConfigSettingsDtoQuoteCalculationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    geoCalculationType: InstanceConfigSettingsDtoGeoCalculationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    deliveryDurationCalculationType: InstanceConfigSettingsDtoDeliveryDurationCalculationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    courierCompensationCalculationType: InstanceConfigSettingsDtoCourierCompensationCalculationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    defaultDietaryRestrictions: InstanceConfigSettingsDtoDefaultDietaryRestrictionsEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    distanceUnit: InstanceConfigSettingsDtoDistanceUnitEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceConfigSettingsDto
     */
    currency: InstanceConfigSettingsDtoCurrencyEnum;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    maxAssignmentDistance: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    maxDriftDistance: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    quoteExpirationMinutes: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    feePercentageAmount: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    defaultCourierPayRate: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    defaultMinimumCourierPay: number | null;
    /**
     * 
     * @type {number}
     * @memberof InstanceConfigSettingsDto
     */
    defaultMaxWorkingHours: number | null;
}


/**
 * @export
 */
export const InstanceConfigSettingsDtoCourierMatcherTypeEnum = {
    NearestCourier: 'NEAREST_COURIER',
    CourierSeniority: 'COURIER_SENIORITY',
    Static: 'STATIC'
} as const;
export type InstanceConfigSettingsDtoCourierMatcherTypeEnum = typeof InstanceConfigSettingsDtoCourierMatcherTypeEnum[keyof typeof InstanceConfigSettingsDtoCourierMatcherTypeEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoQuoteCalculationTypeEnum = {
    ByDistance: 'BY_DISTANCE',
    Surge: 'SURGE',
    Custom: 'CUSTOM'
} as const;
export type InstanceConfigSettingsDtoQuoteCalculationTypeEnum = typeof InstanceConfigSettingsDtoQuoteCalculationTypeEnum[keyof typeof InstanceConfigSettingsDtoQuoteCalculationTypeEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoGeoCalculationTypeEnum = {
    Haversine: 'HAVERSINE',
    GoogleMatrixApi: 'GOOGLE_MATRIX_API',
    Random: 'RANDOM'
} as const;
export type InstanceConfigSettingsDtoGeoCalculationTypeEnum = typeof InstanceConfigSettingsDtoGeoCalculationTypeEnum[keyof typeof InstanceConfigSettingsDtoGeoCalculationTypeEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoDeliveryDurationCalculationTypeEnum = {
    Simple: 'SIMPLE'
} as const;
export type InstanceConfigSettingsDtoDeliveryDurationCalculationTypeEnum = typeof InstanceConfigSettingsDtoDeliveryDurationCalculationTypeEnum[keyof typeof InstanceConfigSettingsDtoDeliveryDurationCalculationTypeEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoCourierCompensationCalculationTypeEnum = {
    FromQuoteFrom: 'FROM_QUOTE_FROM'
} as const;
export type InstanceConfigSettingsDtoCourierCompensationCalculationTypeEnum = typeof InstanceConfigSettingsDtoCourierCompensationCalculationTypeEnum[keyof typeof InstanceConfigSettingsDtoCourierCompensationCalculationTypeEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoDefaultDietaryRestrictionsEnum = {
    None: 'NONE',
    Vegan: 'VEGAN',
    Vegetarian: 'VEGETARIAN',
    Halal: 'HALAL',
    Kosher: 'KOSHER',
    GlutenFree: 'GLUTEN_FREE',
    LactoseFree: 'LACTOSE_FREE',
    NutFree: 'NUT_FREE',
    SeafoodFree: 'SEAFOOD_FREE',
    Other: 'OTHER'
} as const;
export type InstanceConfigSettingsDtoDefaultDietaryRestrictionsEnum = typeof InstanceConfigSettingsDtoDefaultDietaryRestrictionsEnum[keyof typeof InstanceConfigSettingsDtoDefaultDietaryRestrictionsEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoDistanceUnitEnum = {
    Kilometers: 'KILOMETERS',
    Miles: 'MILES'
} as const;
export type InstanceConfigSettingsDtoDistanceUnitEnum = typeof InstanceConfigSettingsDtoDistanceUnitEnum[keyof typeof InstanceConfigSettingsDtoDistanceUnitEnum];

/**
 * @export
 */
export const InstanceConfigSettingsDtoCurrencyEnum = {
    Usd: 'USD',
    Eur: 'EUR'
} as const;
export type InstanceConfigSettingsDtoCurrencyEnum = typeof InstanceConfigSettingsDtoCurrencyEnum[keyof typeof InstanceConfigSettingsDtoCurrencyEnum];


/**
 * Check if a given object implements the InstanceConfigSettingsDto interface.
 */
export function instanceOfInstanceConfigSettingsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "courierMatcherType" in value;
    isInstance = isInstance && "quoteCalculationType" in value;
    isInstance = isInstance && "geoCalculationType" in value;
    isInstance = isInstance && "deliveryDurationCalculationType" in value;
    isInstance = isInstance && "courierCompensationCalculationType" in value;
    isInstance = isInstance && "defaultDietaryRestrictions" in value;
    isInstance = isInstance && "distanceUnit" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "maxAssignmentDistance" in value;
    isInstance = isInstance && "maxDriftDistance" in value;
    isInstance = isInstance && "quoteExpirationMinutes" in value;
    isInstance = isInstance && "feePercentageAmount" in value;
    isInstance = isInstance && "defaultCourierPayRate" in value;
    isInstance = isInstance && "defaultMinimumCourierPay" in value;
    isInstance = isInstance && "defaultMaxWorkingHours" in value;

    return isInstance;
}

export function InstanceConfigSettingsDtoFromJSON(json: any): InstanceConfigSettingsDto {
    return InstanceConfigSettingsDtoFromJSONTyped(json, false);
}

export function InstanceConfigSettingsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceConfigSettingsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'courierMatcherType': json['courierMatcherType'],
        'quoteCalculationType': json['quoteCalculationType'],
        'geoCalculationType': json['geoCalculationType'],
        'deliveryDurationCalculationType': json['deliveryDurationCalculationType'],
        'courierCompensationCalculationType': json['courierCompensationCalculationType'],
        'defaultDietaryRestrictions': json['defaultDietaryRestrictions'],
        'distanceUnit': json['distanceUnit'],
        'currency': json['currency'],
        'maxAssignmentDistance': json['maxAssignmentDistance'],
        'maxDriftDistance': json['maxDriftDistance'],
        'quoteExpirationMinutes': json['quoteExpirationMinutes'],
        'feePercentageAmount': json['feePercentageAmount'],
        'defaultCourierPayRate': json['defaultCourierPayRate'],
        'defaultMinimumCourierPay': json['defaultMinimumCourierPay'],
        'defaultMaxWorkingHours': json['defaultMaxWorkingHours'],
    };
}

export function InstanceConfigSettingsDtoToJSON(value?: InstanceConfigSettingsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'courierMatcherType': value.courierMatcherType,
        'quoteCalculationType': value.quoteCalculationType,
        'geoCalculationType': value.geoCalculationType,
        'deliveryDurationCalculationType': value.deliveryDurationCalculationType,
        'courierCompensationCalculationType': value.courierCompensationCalculationType,
        'defaultDietaryRestrictions': value.defaultDietaryRestrictions,
        'distanceUnit': value.distanceUnit,
        'currency': value.currency,
        'maxAssignmentDistance': value.maxAssignmentDistance,
        'maxDriftDistance': value.maxDriftDistance,
        'quoteExpirationMinutes': value.quoteExpirationMinutes,
        'feePercentageAmount': value.feePercentageAmount,
        'defaultCourierPayRate': value.defaultCourierPayRate,
        'defaultMinimumCourierPay': value.defaultMinimumCourierPay,
        'defaultMaxWorkingHours': value.defaultMaxWorkingHours,
    };
}

