/* tslint:disable */
/* eslint-disable */
/**
 * OPENCOURIER-API
 * OpenCourier Backend API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CourierFullSettingsAdminDto
 */
export interface CourierFullSettingsAdminDto {
    /**
     * 
     * @type {string}
     * @memberof CourierFullSettingsAdminDto
     */
    vehicleType: CourierFullSettingsAdminDtoVehicleTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    preferredAreas: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof CourierFullSettingsAdminDto
     */
    shiftAvailability: object | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    deliveryPreferences: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    foodPreferences: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof CourierFullSettingsAdminDto
     */
    earningGoals: object | null;
    /**
     * 
     * @type {string}
     * @memberof CourierFullSettingsAdminDto
     */
    deliverySpeed: CourierFullSettingsAdminDtoDeliverySpeedEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    restaurantTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    cuisineTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    preferredRestaurantPartners: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CourierFullSettingsAdminDto
     */
    dietaryRestrictions: Array<CourierFullSettingsAdminDtoDietaryRestrictionsEnum>;
    /**
     * 
     * @type {object}
     * @memberof CourierFullSettingsAdminDto
     */
    payRate: object | null;
    /**
     * 
     * @type {string}
     * @memberof CourierFullSettingsAdminDto
     */
    courierId: string | null;
}


/**
 * @export
 */
export const CourierFullSettingsAdminDtoVehicleTypeEnum = {
    Bicycle: 'BICYCLE',
    Motorcycle: 'MOTORCYCLE',
    Car: 'CAR',
    Scooter: 'SCOOTER',
    OnFoot: 'ON_FOOT'
} as const;
export type CourierFullSettingsAdminDtoVehicleTypeEnum = typeof CourierFullSettingsAdminDtoVehicleTypeEnum[keyof typeof CourierFullSettingsAdminDtoVehicleTypeEnum];

/**
 * @export
 */
export const CourierFullSettingsAdminDtoDeliverySpeedEnum = {
    Regular: 'REGULAR',
    Rush: 'RUSH'
} as const;
export type CourierFullSettingsAdminDtoDeliverySpeedEnum = typeof CourierFullSettingsAdminDtoDeliverySpeedEnum[keyof typeof CourierFullSettingsAdminDtoDeliverySpeedEnum];

/**
 * @export
 */
export const CourierFullSettingsAdminDtoDietaryRestrictionsEnum = {
    None: 'NONE',
    Vegan: 'VEGAN',
    Vegetarian: 'VEGETARIAN',
    Halal: 'HALAL',
    Kosher: 'KOSHER',
    GlutenFree: 'GLUTEN_FREE',
    LactoseFree: 'LACTOSE_FREE',
    NutFree: 'NUT_FREE',
    SeafoodFree: 'SEAFOOD_FREE',
    Other: 'OTHER'
} as const;
export type CourierFullSettingsAdminDtoDietaryRestrictionsEnum = typeof CourierFullSettingsAdminDtoDietaryRestrictionsEnum[keyof typeof CourierFullSettingsAdminDtoDietaryRestrictionsEnum];


/**
 * Check if a given object implements the CourierFullSettingsAdminDto interface.
 */
export function instanceOfCourierFullSettingsAdminDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "vehicleType" in value;
    isInstance = isInstance && "preferredAreas" in value;
    isInstance = isInstance && "shiftAvailability" in value;
    isInstance = isInstance && "deliveryPreferences" in value;
    isInstance = isInstance && "foodPreferences" in value;
    isInstance = isInstance && "earningGoals" in value;
    isInstance = isInstance && "deliverySpeed" in value;
    isInstance = isInstance && "restaurantTypes" in value;
    isInstance = isInstance && "cuisineTypes" in value;
    isInstance = isInstance && "preferredRestaurantPartners" in value;
    isInstance = isInstance && "dietaryRestrictions" in value;
    isInstance = isInstance && "payRate" in value;
    isInstance = isInstance && "courierId" in value;

    return isInstance;
}

export function CourierFullSettingsAdminDtoFromJSON(json: any): CourierFullSettingsAdminDto {
    return CourierFullSettingsAdminDtoFromJSONTyped(json, false);
}

export function CourierFullSettingsAdminDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CourierFullSettingsAdminDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vehicleType': json['vehicleType'],
        'preferredAreas': json['preferredAreas'],
        'shiftAvailability': json['shiftAvailability'],
        'deliveryPreferences': json['deliveryPreferences'],
        'foodPreferences': json['foodPreferences'],
        'earningGoals': json['earningGoals'],
        'deliverySpeed': json['deliverySpeed'],
        'restaurantTypes': json['restaurantTypes'],
        'cuisineTypes': json['cuisineTypes'],
        'preferredRestaurantPartners': json['preferredRestaurantPartners'],
        'dietaryRestrictions': json['dietaryRestrictions'],
        'payRate': json['payRate'],
        'courierId': json['courierId'],
    };
}

export function CourierFullSettingsAdminDtoToJSON(value?: CourierFullSettingsAdminDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vehicleType': value.vehicleType,
        'preferredAreas': value.preferredAreas,
        'shiftAvailability': value.shiftAvailability,
        'deliveryPreferences': value.deliveryPreferences,
        'foodPreferences': value.foodPreferences,
        'earningGoals': value.earningGoals,
        'deliverySpeed': value.deliverySpeed,
        'restaurantTypes': value.restaurantTypes,
        'cuisineTypes': value.cuisineTypes,
        'preferredRestaurantPartners': value.preferredRestaurantPartners,
        'dietaryRestrictions': value.dietaryRestrictions,
        'payRate': value.payRate,
        'courierId': value.courierId,
    };
}

